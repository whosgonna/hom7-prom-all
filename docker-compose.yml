version: '3.9'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        volumes:
            - ./prometheus/:/etc/prometheus/
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=30d'
            - '--web.enable-lifecycle'
        restart: unless-stopped
        expose:
            - 9090
        labels:
            org.label-schema.group: "monitoring"
        logging:
            options:
                max-size: "50m"


    alertmanager:
        image: prom/alertmanager:latest
        container_name: alertmanager
        volumes: 
            - ./alertmanager/:/etc/alertmanager/
        command:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/alertmanager'
        restart: unless-stopped
        expose:
            - 9093
        labels:
            org.label-schema.group: "monitoring"
        logging:
            options:
                max-size: "50m"
        depends_on:
            - grafana


    nodeexporter:
        image: prom/node-exporter:latest
        container_name: nodeexporter
        user: root
        privileged: true
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
        restart: unless-stopped
        expose:
            - 9100
        labels:
            org.label-schema.group: "monitoring"
        logging:
            options:
                max-size: "50m"
        depends_on:
            - prometheus
    
  
    grafana:
        image: grafana/grafana:master
        container_name: grafana
        volumes:
            - grafana_data:/var/lib/grafana
            - ./grafana/provisioning/:/etc/grafana/provisioning/
        environment:
            - GF_SECURITY_ALLOW_EMBEDDING=true
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
            - GF_AUTH_OAUTH_AUTO_LOGIN=true
            - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
            - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
            - GF_USERS_ALLOW_SIGN_UP=false
            - GF_EXPLORE_ENABLED=true
        restart: unless-stopped
        ports:
            - "9030:3000"
        healthcheck:
            test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3000/login || exit 1"]
            interval: 1s
            timeout: 3s
            retries: 30
        labels:
            org.label-schema.group: "monitoring"
        logging:
            options:
                max-size: "50m"
  
  
    loki:
        image: grafana/loki
        container_name: loki
        restart: unless-stopped
        expose:
            - 3100
        ports:
            - "3100:3100"
        labels:
            org.label-schema.group: "monitoring"
        logging:
            options:
                max-size: "50m"
  
  
    heplify-server:
        image: sipcapture/heplify-server
        container_name: heplify-server
        ports:
            - "9060:9060"
            - "9060:9060/udp"
            - "9061:9061/tcp"
        command:
            - './heplify-server'
        environment:
            - "HEPLIFYSERVER_HEPADDR=0.0.0.0:9060"
            - "HEPLIFYSERVER_HEPTCPADDR=0.0.0.0:9061"
            - "HEPLIFYSERVER_DBSHEMA=homer7"
            - "HEPLIFYSERVER_DBDRIVER=postgres"
            - "HEPLIFYSERVER_DBADDR=db:5432"
            - "HEPLIFYSERVER_DBUSER=root"
            - "HEPLIFYSERVER_DBPASS=homerSeven"
            - "HEPLIFYSERVER_DBDATATABLE=homer_data"
            - "HEPLIFYSERVER_DBCONFTABLE=homer_config"
            - "HEPLIFYSERVER_DBROTATE=true"
            - "HEPLIFYSERVER_DBDROPDAYS=5"
            - "HEPLIFYSERVER_LOGLVL=info"
            - "HEPLIFYSERVER_LOGSTD=true"
            - "HEPLIFYSERVER_PROMADDR=0.0.0.0:9096"
      #      - "HEPLIFYSERVER_PROMTARGETIP=127.0.0.1"
      #      - "HEPLIFYSERVER_PROMTARGETNAME=local"
            - "HEPLIFYSERVER_DEDUP=false"
            - "HEPLIFYSERVER_LOKIURL=http://loki:3100/api/prom/push"
            - "HEPLIFYSERVER_LOKITIMER=2"
        restart: unless-stopped
        depends_on:
            - loki
            - db
        expose:
            - 9090
            - 9096
        labels:
            org.label-schema.group: "monitoring"
        logging:
            options:
                max-size: "50m"
  
  
    homer-webapp:
        container_name: homer-webapp
        image: sipcapture/webapp
        environment:
            - "LOKI_HOST=loki"
            - "PROM_HOST=prometheus"
            - "DB_HOST=db"
            - "DB_USER=root"
            - "DB_PASS=homerSeven"
        restart: unless-stopped
        ports:
            - "9080:80"
        volumes:
            - ./bootstrap:/app/bootstrap
        logging:
            options:
                max-size: "50m"
        depends_on:
            db:
                condition: service_healthy
            grafana:
                condition: service_healthy
  
  
    db:
        container_name: db
        image: postgres:11-alpine
        environment:
            POSTGRES_PASSWORD: homerSeven
            POSTGRES_USER: root
        expose:
            - 5432
        restart: unless-stopped
        volumes:
            - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
            - ./postgres-data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "psql -h 'localhost' -U 'root' -c '\\l'"]
            interval: 1s
            timeout: 3s
            retries: 30
        logging:
            options:
                max-size: "50m"
        depends_on:
            - grafana


    kamailio:
        image: whosgonna/cnamtest
        container_name: kamailio
        ports:
            - 5050:5060/udp
            - 5050:5060/tcp
        volumes:
            - ./kamailio:/etc/kamailio
        entrypoint: /usr/sbin/kamailio
        command: [ "-DDddE" ]
        environment:
            - CNAM_API_KEY=ABCDEFG
            - CNAM_URL=http://cnam_mockweb:5000/ecid/v1/identity
        logging:
            driver: loki
            options:
                loki-url: "http://host.docker.internal:3100/loki/api/v1/push"
                loki-pipeline-stages: |
                    - regex:
                        expression: '^(?P<kam_ps_idx>\d+)\((?P<pid>\d+)\) (?P<severity>\w+): \[(?P<route>\w+) (?P<callid>\S+) (?P<method>\w+)-(?P<cseq>\d+)'
                    - labels:
                        kam_ps_id:
                        pid:
                        severity:
                        route:
                        callid:
                        method:
                        cseq:
     

    cnam_mockweb:
        image: whosgonna/cnam_mockweb
        container_name: cnam_mockweb
        entrypoint: carton 
        command: ["exec", "plackup", "-p", "5000", "--server", "Gazelle", "/home/perl/bin/app.psgi"]   
        environment:
            - CNAM_API_KEY=ABCDEFG
            - CNAM_URL=http://cnam_mockweb:5000/ecid/v1/identity
        volumes:
            - ./mockweb/lib/:/home/perl/lib

